"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContainerInsightsAddOn = void 0;
const aws_eks_1 = require("@aws-cdk/aws-eks");
const aws_iam_1 = require("@aws-cdk/aws-iam");
const yaml_utils_1 = require("../../utils/yaml-utils");
class ContainerInsightsAddOn {
    deploy(clusterInfo) {
        const cluster = clusterInfo.cluster;
        console.assert(clusterInfo.nodeGroup || clusterInfo.autoscalingGroup, "ContainerInsightsAddon can only be used with EKS EC2 at the moment. "
            + "If using customer cluster provider, make sure you return the node group");
        const nodeGroup = clusterInfo.nodeGroup || clusterInfo.autoscalingGroup;
        nodeGroup.role.addManagedPolicy(aws_iam_1.ManagedPolicy.fromAwsManagedPolicyName('CloudWatchAgentServerPolicy'));
        const doc = yaml_utils_1.readYamlDocument(__dirname + '/cwagent-fluentd-quickstart.yaml');
        const docArray = doc.replace(/{{cluster_name}}/g, cluster.clusterName).replace(/{{region_name}}/g, cluster.stack.region).split("---").map(e => yaml_utils_1.loadYaml(e));
        new aws_eks_1.KubernetesManifest(cluster.stack, "cluster-insights", {
            cluster,
            manifest: docArray
        });
    }
}
exports.ContainerInsightsAddOn = ContainerInsightsAddOn;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9saWIvYWRkb25zL2Nsb3Vkd2F0Y2gvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7O0FBQUEsOENBQXNEO0FBQ3RELDhDQUFpRDtBQUVqRCx1REFBb0U7QUFFcEUsTUFBYSxzQkFBc0I7SUFFL0IsTUFBTSxDQUFDLFdBQXdCO1FBQzNCLE1BQU0sT0FBTyxHQUFHLFdBQVcsQ0FBQyxPQUFPLENBQUM7UUFDcEMsT0FBTyxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsU0FBUyxJQUFJLFdBQVcsQ0FBQyxnQkFBZ0IsRUFBRSxzRUFBc0U7Y0FDdEkseUVBQXlFLENBQUMsQ0FBQztRQUVqRixNQUFNLFNBQVMsR0FBRyxXQUFXLENBQUMsU0FBUyxJQUFJLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQztRQUN4RSxTQUFVLENBQUMsSUFBSSxDQUFDLGdCQUFnQixDQUFDLHVCQUFhLENBQUMsd0JBQXdCLENBQUMsNkJBQTZCLENBQUMsQ0FBQyxDQUFDO1FBQ3hHLE1BQU0sR0FBRyxHQUFHLDZCQUFnQixDQUFDLFNBQVMsR0FBRyxrQ0FBa0MsQ0FBQyxDQUFDO1FBQzdFLE1BQU0sUUFBUSxHQUFHLEdBQUcsQ0FBQyxPQUFPLENBQUMsbUJBQW1CLEVBQUUsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxrQkFBa0IsRUFBRSxPQUFPLENBQUMsS0FBSyxDQUFDLE1BQU0sQ0FBQyxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxxQkFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDNUosSUFBSSw0QkFBa0IsQ0FBQyxPQUFPLENBQUMsS0FBSyxFQUFFLGtCQUFrQixFQUFFO1lBQ3RELE9BQU87WUFDUCxRQUFRLEVBQUUsUUFBUTtTQUNyQixDQUFDLENBQUM7SUFDUCxDQUFDO0NBQ0o7QUFoQkQsd0RBZ0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgS3ViZXJuZXRlc01hbmlmZXN0IH0gZnJvbSBcIkBhd3MtY2RrL2F3cy1la3NcIjtcbmltcG9ydCB7IE1hbmFnZWRQb2xpY3kgfSBmcm9tIFwiQGF3cy1jZGsvYXdzLWlhbVwiO1xuaW1wb3J0IHsgQ2x1c3RlckFkZE9uLCBDbHVzdGVySW5mbyB9IGZyb20gXCIuLi8uLi9zdGFja3MvZWtzLWJsdWVwcmludC1zdGFja1wiO1xuaW1wb3J0IHsgbG9hZFlhbWwsIHJlYWRZYW1sRG9jdW1lbnQgfSBmcm9tIFwiLi4vLi4vdXRpbHMveWFtbC11dGlsc1wiO1xuXG5leHBvcnQgY2xhc3MgQ29udGFpbmVySW5zaWdodHNBZGRPbiBpbXBsZW1lbnRzIENsdXN0ZXJBZGRPbiB7XG5cbiAgICBkZXBsb3koY2x1c3RlckluZm86IENsdXN0ZXJJbmZvKTogdm9pZCB7XG4gICAgICAgIGNvbnN0IGNsdXN0ZXIgPSBjbHVzdGVySW5mby5jbHVzdGVyO1xuICAgICAgICBjb25zb2xlLmFzc2VydChjbHVzdGVySW5mby5ub2RlR3JvdXAgfHwgY2x1c3RlckluZm8uYXV0b3NjYWxpbmdHcm91cCwgXCJDb250YWluZXJJbnNpZ2h0c0FkZG9uIGNhbiBvbmx5IGJlIHVzZWQgd2l0aCBFS1MgRUMyIGF0IHRoZSBtb21lbnQuIFwiXG4gICAgICAgICAgICArIFwiSWYgdXNpbmcgY3VzdG9tZXIgY2x1c3RlciBwcm92aWRlciwgbWFrZSBzdXJlIHlvdSByZXR1cm4gdGhlIG5vZGUgZ3JvdXBcIik7XG5cbiAgICAgICAgY29uc3Qgbm9kZUdyb3VwID0gY2x1c3RlckluZm8ubm9kZUdyb3VwIHx8IGNsdXN0ZXJJbmZvLmF1dG9zY2FsaW5nR3JvdXA7XG4gICAgICAgIG5vZGVHcm91cCEucm9sZS5hZGRNYW5hZ2VkUG9saWN5KE1hbmFnZWRQb2xpY3kuZnJvbUF3c01hbmFnZWRQb2xpY3lOYW1lKCdDbG91ZFdhdGNoQWdlbnRTZXJ2ZXJQb2xpY3knKSk7XG4gICAgICAgIGNvbnN0IGRvYyA9IHJlYWRZYW1sRG9jdW1lbnQoX19kaXJuYW1lICsgJy9jd2FnZW50LWZsdWVudGQtcXVpY2tzdGFydC55YW1sJyk7XG4gICAgICAgIGNvbnN0IGRvY0FycmF5ID0gZG9jLnJlcGxhY2UoL3t7Y2x1c3Rlcl9uYW1lfX0vZywgY2x1c3Rlci5jbHVzdGVyTmFtZSkucmVwbGFjZSgve3tyZWdpb25fbmFtZX19L2csIGNsdXN0ZXIuc3RhY2sucmVnaW9uKS5zcGxpdChcIi0tLVwiKS5tYXAoZSA9PiBsb2FkWWFtbChlKSk7XG4gICAgICAgIG5ldyBLdWJlcm5ldGVzTWFuaWZlc3QoY2x1c3Rlci5zdGFjaywgXCJjbHVzdGVyLWluc2lnaHRzXCIsIHtcbiAgICAgICAgICAgIGNsdXN0ZXIsXG4gICAgICAgICAgICBtYW5pZmVzdDogZG9jQXJyYXlcbiAgICAgICAgfSk7XG4gICAgfVxufSJdfQ==